{
    "comment_": [
        "The grammar uses list items instead of OR, and <> to refer to a token type.",
        "Brackets are ignored as they aren't part of the tree."
    ],
    "grammar": {
        "logical": [
            "comparison <LOGICAL_OP> comparison",
            "<NOT> comparison",
            "comparison"
        ],
        "comparison": [
            "expression <COMPARISON> expression",
            "expression"
        ],
        "expression": [
            "term <PLUS_MINUS> term",
            "term"
        ],
        "term": [
            "exp_factor <MULT_DIVIDE> exp_factor",
            "exp_factor <MOD> exp_factor",
            "exp_factor"
        ],
        "exp_factor":[
            "factor <EXP> factor",
            "factor"
        ],
        "factor": [
            "terminal",
            "<(> expression <)>"
        ],
        "terminal": [
            "<ID>", 
            "<CHAR>", 
            "<BOOL>"
        ]
    },
    "operators": ["PLUS_MINUS", "MULT_DIVIDE", "MOD", "EXP", "COMPARISON", "LOGICAL_OP", "NOT"]
}